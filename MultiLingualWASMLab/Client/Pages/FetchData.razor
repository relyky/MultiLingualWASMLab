@page "/fetchdata"
@inject HttpClient Http
@inject IWeatherForecastApi bizApi

<PageTitle>Weather forecast</PageTitle>

<MudContainer>
  <MudText Typo=Typo.h3>Weather forecast</MudText>
  <MudText>This component demonstrates fetching data from the server.</MudText>
  <MudToolBar>
    <MudButton Variant=Variant.Filled Color=Color.Primary OnClick=HandleQuery>刷新</MudButton>
  </MudToolBar>

  @if (forecastList == null)
  {
    <p><em>Loading...</em></p>
  }
  else
  {
    <table class="table">
      <thead>
        <tr>
          <th>Date</th>
          <th>Temp. (C)</th>
          <th>Temp. (F)</th>
          <th>Summary</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var forecast in forecastList)
        {
          <tr>
            <td>@forecast.Date.ToShortDateString()</td>
            <td>@forecast.TemperatureC</td>
            <td>@forecast.TemperatureF</td>
            <td>@forecast.Summary</td>
          </tr>
        }
      </tbody>
    </table>
  }
</MudContainer>

@code {
  private List<WeatherForecast>? forecastList;

  protected override async Task OnInitializedAsync()
  {
    await HandleQuery();
  }

  async Task HandleQuery()
  {
    forecastList = await bizApi.WeatherForecastAsync();
  }
}
