@inject NavigationManager navSvc
@inject ILocalStorageService localStorage
@inject IStringLocalizer<App> loc

<span>
  @loc["Language"]:&nbsp;
  <select @onchange=HandleCultureChange>
    @foreach (var culture in LocalizerSettings.SupportedCulturesWithName)
    {
      @if (culture.Equals(selectedCulture))
      {
        <option selected value="@culture.Culture">@culture.Name</option>
      }
      else
      {
        <option value="@culture.Culture">@culture.Name</option>
      }
    }
  </select>
</span>

@code {
  CultureWithName? selectedCulture = null;
  protected override async Task OnInitializedAsync()
  {
    string culture = await localStorage.GetItemAsync<string>("culture");
    selectedCulture = String.IsNullOrEmpty(culture)
        ? LocalizerSettings.NeutralCulture
        : LocalizerSettings.SupportedCulturesWithName.FirstOrDefault(c => c.Culture == culture);
  }

  /// <summary>
  /// 切換語系
  /// </summary>
  async Task HandleCultureChange(ChangeEventArgs args)
  {
    //## 切換語系：將指定的新語系存入 localStorage 然後(刷新)重新開啟現在網址。
    string cultureString = args.Value?.ToString()!;
    await localStorage.SetItemAsync<string>("culture", cultureString);
    navSvc.NavigateTo(navSvc.Uri, true); // refresh current page.
  }
}
